#!/usr/bin/env ruby

require 'afhbot'

def main

  log = AFHBot::Log.new(debug: false)
  config = AFHBot::Config.new(log, "data/config.yml")

  if config.get.has_key?('debug') 
    log.debug = config.get['debug']
  end


  # Twitch
  config_twitch = config.get["twitch"]
  main_queue = Queue.new
  # Make another queue to talk to twitch_client, one is used to talk to us from all the clients.

  client_queue = Queue.new
  sock = AFHBot::TLSSocket.new(log, config_twitch["server_addr"], config_twitch["server_port"])
  twitch_proto = AFHBot::TwitchProto.new(log, sock, config_twitch)
  twitch_client = AFHBot::TwitchClient.new(log, {:tx_queue=>main_queue, :rx_queue=>client_queue}, twitch_proto) 

  Thread.abort_on_exception = true
  tc = Thread.new { twitch_client.client_thread }
  #tc.join # TODO: Maybe we don't want to join here?
  #sock.close


  # Discord
  discord_client = AFHBot::DiscordClient.new(log, config)

  if ARGV.include? 'register'
    discord_client.register_commands(config.get['groupmodule'], AFHBot::DiscordGroup)
  elsif ARGV.include? 'unregister'
    discord_client.unregister_commands(config.get['groupmodule'], AFHBot::DiscordGroup)
  end

  discord_client.initialize_commands(config.get['groupmodule'], AFHBot::DiscordGroup)
  discord_client.run

end

main
